* 虚函数
1. 被关键字 =virtual= 声明的函数
2. 这种函数和普通的方法没什么区别，只有在使用指针或引用时才会有区别
   - 当基类指针或者引用指向一个派生类对象时，通过指针或者引用调用了一
     个虚函数，程序将调用对象所属类的函数，而不是指针或者引用所属类的
     函数
** 虚函数工作原理
1. 基类的虚函数会被储存在一个函数地址数组里，只有虚函数才会被存进去
2. 派生类也有一个存储函数地址的列表
   1. 新的被 =virtual= 关键字声明的函数地址
   2. 基类声明的虚函数的地址
      - 如果派生类重定义的虚函数，将会存入新函数的地址
3. 指针或引用将会读取对象的vtbl，查找对应的函数地址，并执行他
** 一些注意事项
1. 基类声明了虚函数，所有派生类相应的函数都是虚函数
2. 构造函数声明为虚函数毫无意义，因为派生类的构造函数将调用基类构造函
   数
3. 析构函数还是声明为虚函数，虚构对象用的就应该是对象所属类的析构函数
4. 重定义继承的方法时尽量不要修改接口，但是允许修改返回类型（这叫 返回
   类型协变）
   - 修改接口会隐藏原来的方法
   - 一个函数没什么，隐藏了就隐藏了
   - 如果是重载函数就麻烦了，除了重定义的那个函数以外，剩下的函数都会
     被隐藏，用不了啦
     - 解决方法是，重定义所有的重载函数，实现甚至可以是单纯的调用原来
       对应的基类函数

